import datetime
import random
import math

topic_history = []

comments = [
    "",
    "–¶—ñ–∫–∞–≤–∏–π –≤–∏–±—ñ—Ä! ",
    "–°—É–ø–µ—Ä! –Ø —Ç–∞–∫–æ–∂ –ª—é–±–ª—é —Ü—é —Ç–µ–º—É!üòÄ ",
    "–ì–∞—Ä–Ω–∏–π –≤–∏–±—ñ—Ä —Ç–µ–º–∏üòé ",
    "–¢—Ä–∏–≤—ñ–∞–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä‚òπ ",
    "–ß—É–¥–æ–≤–æ! ",
    "–ü—Ä–µ–∫—Ä–∞—Å–Ω–∏–π –≤–∏–±—ñ—Ä! "
]


def quotation():
    quotation_answer = """5 –Ω–∞–¥–∏—Ö–∞—é—á–∏—Ö —Ü–∏—Ç–∞—Ç:
1. –£—Å–ø—ñ—Ö ‚Äî —Ü–µ –≤–º—ñ–Ω–Ω—è —Ä—É—Ö–∞—Ç–∏—Å—å –≤—ñ–¥ –Ω–µ–≤–¥–∞—á—ñ –¥–æ –Ω–µ–≤–¥–∞—á—ñ, –Ω–µ –≤—Ç—Ä–∞—á–∞—é—á–∏ –µ–Ω—Ç—É–∑—ñ–∞–∑–º—É. (–í—ñ–Ω—Å—Ç–æ–Ω –ß–µ—Ä—á–∏–ª–ª—å)
2. –ñ–∏—Ç—Ç—è –±–µ–∑ —Å—Ç—Ä–µ—Å—É ‚Äî —Ü–µ —Å–º–µ—Ä—Ç—å. (–ì–∞–Ω—Å –°–µ–ª—å—î)
3. –£ –º–µ–Ω–µ –Ω–µ–º–∞—î –æ—Å–æ–±–ª–∏–≤–æ–≥–æ —Ç–∞–ª–∞–Ω—Ç—É, —è –ø—Ä–æ—Å—Ç–æ –¥—É–∂–µ –¥–æ–ø–∏—Ç–ª–∏–≤–∏–π. (–ê–ª—å–±–µ—Ä—Ç –ï–π–Ω—à—Ç–µ–π–Ω)
4. –ì—Ä–æ—à—ñ –∑‚Äô—è–≤–ª—è—é—Ç—å—Å—è, –∫–æ–ª–∏ –≤–∏ –∑–∞–π–º–∞—î—Ç–µ—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ—é —Å–ø—Ä–∞–≤–æ—é. (–ú–∞–π–∫ –§—ñ–ª–ª—ñ–ø—Å)
5. –û—Å–≤—ñ—Ç–∞ ‚Äî —Ü–µ —Ä–æ–∑–ø–∞–ª—é–≤–∞–Ω–Ω—è –ø–æ–ª—É–º'—è, –∞ –Ω–µ –Ω–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –ø–æ—Å—É–¥–∏–Ω–∏. (–°–æ–∫—Ä–∞—Ç)"""
    print_response(quotation_answer)
    chat_storage(input_text, quotation_answer)
    topics_reply()
    return


def carol_5():
    carol_5_answer = """¬´–í–∏—Ñ–ª–µ—î–º—Å—å–∫–∞ –∑—ñ—Ä–∫–∞ —Å—è—î¬ª
–í–∏—Ñ–ª–µ—î–º—Å—å–∫–∞ –∑—ñ—Ä–∫–∞ —Å—è—î
–¢–∞ –∑ –†—ñ–∑–¥–≤–æ–º —É—Å—ñ—Ö –≤—ñ—Ç–∞—î!
–ì–æ–¥—ñ, –ª—é–¥–∏, –Ω–∞–º –∂–∞–ª—ñ—Ç—å—Å—è!
–ü–æ—Å–º—ñ—Ö–Ω—ñ—Ç—å—Å—è, –æ–±—ñ–π–º—ñ—Ç—å—Å—è!
–ë–æ –†—ñ–∑–¥–≤—è–Ω–∏–π —Å–≤—ñ—Ç–ª–∏–π —á–∞—Å
–í –¥—É—à—ñ –∑–∞–≥–ª—è–¥–∞ –¥–æ –≤–∞—Å!
–Ü, –∫–æ–ª–∏ —Ç–∞–º, —Ä–∞–ø—Ç–æ–º, –ø—É—Å—Ç–æ ‚Äì
–ù–µ –ø–æ–º–æ–∂–µ —ñ –∫–∞–ø—É—Å—Ç–∞!
–¢–æ –Ω–µ—Ö–∞–π –∂–µ —Ä–æ–∑–∫–≤—ñ—Ç–∞
–í –¥—É—à–∞—Ö —Å–≤—ñ—Ç–ª–∞ –¥–æ–±—Ä–æ—Ç–∞,
–ó–º–æ–∂–µ—Ç–µ —Ç–æ–¥—ñ –≤—Å–µ –º–∞—Ç–∏,
–©–æ –º–æ–≥–ª–∏ –±–∏ –ø–æ–±–∞–∂–∞—Ç–∏!
–ú–∏ –±–∞–∂–∞—î–º–æ –≤–∞–º —â–∏—Ä–æ
–ó–ª–∞–≥–æ–¥–∏, –¥–æ—Å—Ç–∞—Ç–∫—É, –º–∏—Ä—É!
–¢–æ–∂ –∑ –¥–æ–±—Ä–æ–º –Ω–∞—Å –≤—ñ–¥–ø—É—Å—Ç—ñ—Ç—å
–Ü —â–æ—Å—å –≤ —Ç–æ—Ä–±—É –ø–æ–∫–ª–∞–¥—ñ—Ç—å!"""
    print_response(carol_5_answer)
    response_carol = f"""–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É: "{get_current_topic()}". –Ø –º–æ–∂—É –∑–∞—Å–ø—ñ–≤–∞—Ç–∏ 5 —Ä—ñ–∑–Ω–∏—Ö –∫–æ–ª—è–¥–æ–∫. –û–±–∏—Ä–∞–π—Ç–µ, —è–∫–∞ 
–í–∞–º –¥–æ –¥—É—à—ñ: ¬´{"¬ª, ¬´".join(topics_dictionary["–∑–∞–≥–∞–ª—å–Ω—ñ"]["–∫–æ–ª—è–¥–∫–∏"].keys())}¬ª."""
    print_response(response_carol)
    chat_storage(input_text, f"""{carol_5_answer}
 {response_carol}""")
    return


def carol_4():
    carol_4_answer = """¬´–ö–æ–ª—è–¥—É—î–º, –∫–æ–ª—è–¥—É—î–º¬ª
–ö–æ–ª—è–¥—É—î–º, –∫–æ–ª—è–¥—É—î–º!
–ù–∞—à–∞ –∑—ñ—Ä–æ–Ω—å–∫–∞ –≤—ñ—â—É—î,
–©–æ —É –≤–∞—à—ñ–π –≤—Å—ñ–π –≥–æ—Å–ø–æ–¥—ñ
–Ü –≤ —Å–∞–¥—É, —ñ –Ω–∞ –≥–æ—Ä–æ–¥—ñ,
–ë—É–¥–µ —â–µ–¥—Ä–∏–π —É—Ä–æ–∂–∞–π!
–Ü —à—É–º—ñ—Ç–∏–º–µ, —è–∫ –≥–∞–π,
–°–ª–∞–≤–∞ –ø—Ä–æ —É—Å—é —Ä–æ–¥–∏–Ω—É
–ì–µ–Ω –Ω–∞ –≤—Å–µ–Ω—å–∫—É –£–∫—Ä–∞—ó–Ω—É!
–ë—É–¥–µ –≤–¥–æ—Å—Ç–∞–ª—å —Ö–ª—ñ–±–∞, —Å–æ–ª—ñ,
–ú–∞—Å–ª–∞, –∫–æ–≤–±–∞—Å–∏, –∫–≤–∞—Å–æ–ª—ñ
–Ü –≥–æ—Ä–æ—Ö—É, –±–æ —É –Ω–∞—Å
–ù–µ —Ç–∞–∫–∏–π –¥–æ—Å—Ç—É–ø–Ω–∏–π –≥–∞–∑!
–ë—É–¥–µ –≤—Å–µ, —á–æ–≥–æ –≤–∞–º —Ç—Ä–µ–±–∞!
–ö–∞–∂–µ –∑—ñ—Ä–æ–Ω—å–∫–∞ —ñ–∑ –Ω–µ–±–∞,
–¢—ñ–ª—å–∫–∏ –≤–∏ —Ç–∏–º –Ω–µ –≥–æ—Ä–¥—ñ—Ç—å—Å—è,
–ê —ñ–∑ –Ω–∞–º–∏ –ø–æ–¥—ñ–ª—ñ—Ç—å—Å—è!"""
    print_response(carol_4_answer)
    response_carol = f"""–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É: "{get_current_topic()}". –Ø –º–æ–∂—É –∑–∞—Å–ø—ñ–≤–∞—Ç–∏ 5 —Ä—ñ–∑–Ω–∏—Ö –∫–æ–ª—è–¥–æ–∫. –û–±–∏—Ä–∞–π—Ç–µ, —è–∫–∞ 
–í–∞–º –¥–æ –¥—É—à—ñ: ¬´{"¬ª, ¬´".join(topics_dictionary["–∑–∞–≥–∞–ª—å–Ω—ñ"]["–∫–æ–ª—è–¥–∫–∏"].keys())}¬ª."""
    print_response(response_carol)
    chat_storage(input_text, f"""{carol_4_answer}
 {response_carol}""")
    return


def carol_3():
    carol_3_answer = """¬´–û–π –Ω–∞ —Ä—ñ—á—Ü—ñ, –Ω–∞ –ô–æ—Ä–¥–∞–Ω—ñ¬ª
–û–π –Ω–∞ —Ä—ñ—á—Ü—ñ, –Ω–∞ –ô–æ—Ä–¥–∞–Ω—ñ,
–¢–∞–º –ü—Ä–µ—á–∏—Å—Ç–∞ —Ä–∏–∑–∏ –ø—Ä–∞–ª–∞,
–°–≤–æ–≥–æ —Å–∏–Ω–∞ —Å–ø–æ–≤–∏–≤–∞–ª–∞,
–ù–∞ —è–ª–∏–Ω—ñ –∫–æ–ª–∏—Ö–∞–ª–∞.
–ü—Ä–∏–ª–µ—Ç—ñ–ª–∏ —Ç—Ä–∏ —è–Ω–≥–æ–ª–∏,
–í–∑—è–ª–∏ –•—Ä–∏—Å—Ç–∞ –ø—ñ–¥ –Ω–µ–±–µ—Å–∞.
–í—Å—ñ –Ω–µ–±–µ—Å–∞ —Ä–æ–∑—Ç–≤–æ—Ä–∏–ª–∏—Å—è,
–í—Å—ñ–º —Å–≤—è—Ç–∏–º –ø–æ–∫–ª–æ–Ω–∏–ª–∏—Å—è."""
    print_response(carol_3_answer)
    response_carol = f"""–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É: "{get_current_topic()}". –Ø –º–æ–∂—É –∑–∞—Å–ø—ñ–≤–∞—Ç–∏ 5 —Ä—ñ–∑–Ω–∏—Ö –∫–æ–ª—è–¥–æ–∫. –û–±–∏—Ä–∞–π—Ç–µ, —è–∫–∞ 
–í–∞–º –¥–æ –¥—É—à—ñ: ¬´{"¬ª, ¬´".join(topics_dictionary["–∑–∞–≥–∞–ª—å–Ω—ñ"]["–∫–æ–ª—è–¥–∫–∏"].keys())}¬ª."""
    print_response(response_carol)
    chat_storage(input_text, f"""{carol_3_answer}
     {response_carol}""")
    return


def carol_2():
    carol_2_answer = """¬´–í—ñ—î –≤—ñ—Ç–µ—Ä –∑ –≥—ñ—Ä¬ª
–í—ñ—î –≤—ñ—Ç–µ—Ä –∑ –≥—ñ—Ä
–¢–∞ –¥–æ –≤–∞—Å —É –¥–≤—ñ—Ä,
–ü—Ä–æ—Å–∏—Ç—å—Å—è –¥–æ —Ö–∞—Ç–∏
–ó–∞–∫–æ–ª—è–¥—É–≤–∞—Ç–∏.
–í–∏ –π–æ–≥–æ –ø–æ—á—É–π—Ç–µ,
–°–º–∞–∫–æ—Ç—É –≥–æ—Ç—É–π—Ç–µ!
–ë–æ–≥–∞ –ø—Ä–æ—Å–ª–∞–≤–ª—è–π—Ç–µ,
–ù–∞—Å –Ω–µ –∑–∞–±—É–≤–∞–π—Ç–µ!"""
    print_response(carol_2_answer)
    response_carol = f"""–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É: "{get_current_topic()}". –Ø –º–æ–∂—É –∑–∞—Å–ø—ñ–≤–∞—Ç–∏ 5 —Ä—ñ–∑–Ω–∏—Ö –∫–æ–ª—è–¥–æ–∫. –û–±–∏—Ä–∞–π—Ç–µ, —è–∫–∞ 
–í–∞–º –¥–æ –¥—É—à—ñ: ¬´{"¬ª, ¬´".join(topics_dictionary["–∑–∞–≥–∞–ª—å–Ω—ñ"]["–∫–æ–ª—è–¥–∫–∏"].keys())}¬ª."""
    print_response(response_carol)
    chat_storage(input_text, f"""{carol_2_answer}
 {response_carol}""")
    return


def carol_1():
    carol_1_answer = """¬´–ü—ñ–¥ –Ω–æ–≥–∞–º–∏ —Å–Ω—ñ–≥ —Ä–∏–ø—É—á–∏–π¬ª
–ü—ñ–¥ –Ω–æ–≥–∞–º–∏ —Å–Ω—ñ–≥ —Ä–∏–ø—É—á–∏–π,
–í—ñ—Ç–µ—Ä —Å—Ç—Ä—ñ—Ö–∏ –æ–±–º—ñ—Ç–∞:
–ù–∏–Ω—ñ –¥–µ–Ω—å —è—Å–Ω–∏–π, –±–ª–∏—Å–∫—É—á–∏–π ‚Äî
–î–µ–Ω—å –ù–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –•—Ä–∏—Å—Ç–∞!"""
    print_response(carol_1_answer)
    response_carol = f"""–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É: "{get_current_topic()}". –Ø –º–æ–∂—É –∑–∞—Å–ø—ñ–≤–∞—Ç–∏ 5 —Ä—ñ–∑–Ω–∏—Ö –∫–æ–ª—è–¥–æ–∫. –û–±–∏—Ä–∞–π—Ç–µ, —è–∫–∞ 
–í–∞–º –¥–æ –¥—É—à—ñ: ¬´{"¬ª, ¬´".join(topics_dictionary["–∑–∞–≥–∞–ª—å–Ω—ñ"]["–∫–æ–ª—è–¥–∫–∏"].keys())}¬ª."""
    print_response(response_carol)
    chat_storage(input_text, f"""{carol_1_answer}
 {response_carol}""")
    return


def your_name():
    print_response("–Ø–∫ –í–∞—Å –∑–≤–∞—Ç–∏?")
    chat_storage(get_current_topic(), "–Ø–∫ –í–∞—Å –∑–≤–∞—Ç–∏?")
    a = get_user_input()
    your_name_answer = f"""–ü—Ä–∏—î–º–Ω–æ –ø–æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å, {a}, –∞ —è –¶–µ–∑–∞—Ä,
–≤—ñ—Ä—Ç—É–∞–ª—å–Ω–∏–π —Å–ø—ñ–≤—Ä–æ–∑–º–æ–≤–Ω–∏–∫ —ñ –º–æ–∂—É –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ –Ω–∞ –ø–∏—Ç–∞–Ω–Ω—è –∑ –ø–µ–≤–Ω–∏—Ö —à–∫—ñ–ª—å–Ω–∏—Ö –ø—Ä–µ–¥–º–µ—Ç—ñ–≤))"""
    print_response(your_name_answer)
    chat_storage(a, your_name_answer)
    topics_reply()
    return


def month():
    now = datetime.datetime.now()
    mon = now.month
    month_answer = f"–ü–æ—Ç–æ—á–Ω–∏–π –º—ñ—Å—è—Ü—å: {mon}"
    print_response(month_answer)
    chat_storage(input_text, month_answer)
    topics_reply()
    return


def new_year():
    now = datetime.datetime.now()
    n_year = datetime.datetime(now.year + 1, 1, 1)
    delta = n_year - now
    new_year_answer = f"–î–æ –ù–æ–≤–æ–≥–æ –†–æ–∫—É –∑–∞–ª–∏—à–∏–ª–æ—Å—è: {delta.days} –¥–Ω—ñ–≤."
    print_response(new_year_answer)
    chat_storage(input_text, new_year_answer)
    topics_reply()
    return


def time():
    now = datetime.datetime.now()
    current_time = now.strftime("%H:%M:%S")
    time_answer = f"–ü–æ—Ç–æ—á–Ω–∏–π —á–∞—Å = {current_time}."
    print_response(time_answer)
    chat_storage(input_text, time_answer)
    topics_reply()
    return


def noun_genders():
    noun_genders_answer = """–£–∫—Ä–∞—ó–Ω—Å—å–∫—ñ —ñ–º–µ–Ω–Ω–∏–∫–∏ –≤ –æ–¥–Ω–∏–Ω—ñ –Ω–∞–ª–µ–∂–∞—Ç—å –¥–æ
—á–æ–ª–æ–≤—ñ—á–æ–≥–æ, –∂—ñ–Ω–æ—á–æ–≥–æ, —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ —Ç–∞ —Å–ø—ñ–ª—å–Ω–æ–≥–æ —Ä–æ–¥—É."""
    print_response(noun_genders_answer)
    chat_storage(input_text, noun_genders_answer)
    topics_reply()
    return


def ukrainian_declension():
    ukrainian_declension_answer = """–í —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ–π –º–æ–≤—ñ —Å—ñ–º –≤—ñ–¥–º—ñ–Ω–∫—ñ–≤, –∫–æ–∂–µ–Ω –∑ —è–∫–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –Ω–∞ –ø–µ–≤–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è:
–ù–∞–∑–∏–≤–Ω–∏–π (–ù. –≤.) ‚Äî –•—Ç–æ? –©–æ?
–†–æ–¥–æ–≤–∏–π (–†. –≤.) ‚Äî –ö–æ–≥–æ? –ß–æ–≥–æ?
–î–∞–≤–∞–ª—å–Ω–∏–π (–î. –≤.) ‚Äî –ö–æ–º—É? –ß–æ–º—É?
–ó–Ω–∞—Ö—ñ–¥–Ω–∏–π (3. –≤.) ‚Äî –ö–æ–≥–æ? –©–æ?
–û—Ä—É–¥–Ω–∏–π (–û—Ä. –≤.) ‚Äî –ö–∏–º? –ß–∏–º?
–ú—ñ—Å—Ü–µ–≤–∏–π (–ú. –≤.) ‚Äî –ù–∞ –∫–æ–º—É? –ù–∞ —á–æ–º—É?
–ö–ª–∏—á–Ω–∏–π (–ö–ª. –≤.) ‚Äî —ñ–º–µ–Ω–Ω–∏–∫–∏ –≤–∏—Å—Ç—É–ø–∞—é—Ç—å –∑–≤–µ—Ä—Ç–∞–Ω–Ω—è–º."""
    print_response(ukrainian_declension_answer)
    chat_storage(input_text, ukrainian_declension_answer)
    topics_reply()
    return


def planets_distance():
    planets_distance_answer = f"""–í—ñ–¥—Å—Ç–∞–Ω—å –º—ñ–∂ –ó–µ–º–ª–µ—é —Ç–∞ –°–æ–Ω—Ü–µ–º –Ω–µ —î —Å—Ç–∞—Ç–∏—á–Ω–æ—é, –≤–æ–Ω–∞ –∑–º—ñ–Ω—é—î—Ç—å—Å—è –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —ó—Ö
–ø–æ–ª–æ–∂–µ–Ω–Ω—è –≤—ñ–¥–Ω–æ—Å–Ω–æ –æ–¥–∏–Ω –¥–æ –æ–¥–Ω–æ–≥–æ. –ê–ª–µ —Å–µ—Ä–µ–¥–Ω—è –≤—ñ–¥—Å—Ç–∞–Ω—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–ª–∏–∑—å–∫–æ 149,6 –º—ñ–ª—å–π–æ–Ω—ñ–≤ –∫—ñ–ª–æ–º–µ—Ç—Ä—ñ–≤."""
    print_response(planets_distance_answer)
    chat_storage(input_text, planets_distance_answer)
    topics_reply()
    return


def influence_health():
    influence_health_answer = """–ü—Ä–∞–≤–∏–ª—å–Ω–µ –¥–æ–∑—É–≤–∞–Ω–Ω—è –∑–æ—Ä—è–Ω–æ–≥–æ —Å–≤—ñ—Ç–ª–∞ –º–æ–∂–µ –±—É—Ç–∏ –∫–æ—Ä–∏—Å–Ω–∏–º –¥–ª—è –∑–¥–æ—Ä–æ–≤'—è.
–û–¥–Ω–∞–∫, –ø—Ä–∏ —Ç—Ä–∏–≤–∞–ª–æ–º—É –≤–ø–ª–∏–≤—ñ –∑–æ—Ä—è–Ω–æ–≥–æ —Å–≤—ñ—Ç–ª–∞ –Ω–∞ —à–∫—ñ—Ä—É, –º–æ–∂–ª–∏–≤—ñ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ñ –Ω–∞—Å–ª—ñ–¥–∫–∏. 
–ó–∞–Ω–∞–¥—Ç–æ —Ç—Ä–∏–≤–∞–ª–∏–π —á–∞—Å –ø—ñ–¥ —Å–æ–Ω—Ü–µ–º –º–æ–∂–µ –ø—Ä–∏–∑–≤–µ—Å—Ç–∏ –¥–æ –æ–ø—ñ–∫—ñ–≤, –ø–µ—Ä–µ–¥—á–∞—Å–Ω–æ–≥–æ —Å—Ç–∞—Ä—ñ–Ω–Ω—è —à–∫—ñ—Ä–∏ —ñ —Ç.–¥."""
    print_response(influence_health_answer)
    chat_storage(input_text, influence_health_answer)
    topics_reply()
    return


def planets_orbit():
    planets_orbit_answer = """–ù–∞–π–±—ñ–ª—å—à–∞ –æ—Ä–±—ñ—Ç–∞ –≤ –°–æ–Ω—è—á–Ω—ñ–π —Å–∏—Å—Ç–µ–º—ñ –Ω–∞–ª–µ–∂–∏—Ç—å –¥–æ –ø–ª–∞–Ω–µ—Ç–∏ –ù–µ–ø—Ç—É–Ω,
—è–∫–∏–π –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Å–µ—Ä–µ–¥–Ω—å–æ–º—É –Ω–∞ –≤—ñ–¥—Å—Ç–∞–Ω—ñ –±–ª–∏–∑—å–∫–æ 4,5 –º—ñ–ª—å—è—Ä–¥–∞ –∫—ñ–ª–æ–º–µ—Ç—Ä—ñ–≤ –≤—ñ–¥ –°–æ–Ω—Ü—è.
–ù–∞–π–º–µ–Ω—à–∞ –æ—Ä–±—ñ—Ç–∞ –≤ –°–æ–Ω—è—á–Ω—ñ–π —Å–∏—Å—Ç–µ–º—ñ –Ω–∞–ª–µ–∂–∏—Ç—å –ø–ª–∞–Ω–µ—Ç—ñ –ú–µ—Ä–∫—É—Ä—ñ–π, —è–∫–∏–π –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è
–≤ —Å–µ—Ä–µ–¥–Ω—å–æ–º—É –Ω–∞ –≤—ñ–¥—Å—Ç–∞–Ω—ñ –±–ª–∏–∑—å–∫–æ 58 –º—ñ–ª—å–π–æ–Ω—ñ–≤ –∫—ñ–ª–æ–º–µ—Ç—Ä—ñ–≤ –≤—ñ–¥ –°–æ–Ω—Ü—è. """
    print_response(planets_orbit_answer)
    chat_storage(input_text, planets_orbit_answer)
    topics_reply()
    return


def cosmic_radiation():
    cosmic_radiation_answer = """–ö–æ—Å–º—ñ—á–Ω–µ –≤–∏–ø—Ä–æ–º—ñ–Ω—é–≤–∞–Ω–Ω—è ‚Äì —Ü–µ —Ä–∞–¥—ñ–∞—Ü—ñ—è, —è–∫–∞ –∑'—è–≤–ª—è—î—Ç—å—Å—è —É
—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ –≤–∏–±—É—Ö—ñ–≤ –Ω–∞–¥–Ω–æ–≤–∏—Ö –∑—ñ—Ä–æ–∫, –∞ —Ç–∞–∫–æ–∂ –≤–Ω–∞—Å–ª—ñ–¥–æ–∫ —Ç–µ—Ä–º–æ—è–¥–µ—Ä–Ω–∏—Ö —Ä–µ–∞–∫—Ü—ñ–π –Ω–∞ –°–æ–Ω—Ü—ñ."""
    print_response(cosmic_radiation_answer)
    chat_storage(input_text, cosmic_radiation_answer)
    topics_reply()
    return


def largest_continent():
    largest_continent_answer = "–Ñ–≤—Ä–∞–∑—ñ—è ‚Äî –Ω–∞–π–±—ñ–ª—å—à–∏–π –º–∞—Ç–µ—Ä–∏–∫ –Ω–∞ –ó–µ–º–ª—ñ —Ç–∞ —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è –∑ –Ñ–≤—Ä–æ–ø–∏ —Ç–∞ –ê–∑—ñ—ó."
    print_response(largest_continent_answer)
    chat_storage(input_text, largest_continent_answer)
    topics_reply()
    return


def reservoirs():
    reservoirs_answer = "–†–æ—Å—ñ—è —Ç–∞ –ö–∞–Ω–∞–¥–∞ ‚Äì –¥–µ—Ä–∂–∞–≤–∏, —è–∫—ñ –º–∞—é—Ç—å –Ω–∞–π–±—ñ–ª—å—à—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤–æ–¥–æ—Å—Ö–æ–≤–∏—â —É —Å–≤—ñ—Ç—ñ ."
    print_response(reservoirs_answer)
    chat_storage(input_text, reservoirs_answer)
    topics_reply()
    return


def lakes():
    lakes_answer = """–ö–∞–Ω–∞–¥–∞ ‚Äì –∫—Ä–∞—ó–Ω–∞ –∑ –Ω–∞–π–±—ñ–ª—å—à–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—é –æ–∑–µ—Ä. 60% –≤—Å—ñ—Ö –æ–∑–µ—Ä —Å–≤—ñ—Ç—É 
–∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –Ω–∞ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó –ö–∞–Ω–∞–¥–∏: –±—ñ–ª—å—à 3 –º—ñ–ª—å–π–æ–Ω—ñ–≤ –æ–∑–µ—Ä, —â–æ –∑–∞–π–º–∞—é—Ç—å 9% –∫–∞–Ω–∞–¥—Å—å–∫–∏—Ö –∑–µ–º–µ–ª—å."""
    print_response(lakes_answer)
    chat_storage(input_text, lakes_answer)
    topics_reply()
    return


def sahara():
    sahara_answer = "–ù–∞–π–±—ñ–ª—å—à–∞ –ø—É—Å—Ç–µ–ª—è –°–∞—Ö–∞—Ä–∞ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —É –ü—ñ–≤–Ω—ñ—á–Ω—ñ–π –ê—Ñ—Ä–∏—Ü—ñ."
    print_response(sahara_answer)
    chat_storage(input_text, sahara_answer)
    topics_reply()
    return


def largest_lake():
    largest_lake_answer = "–ö–∞—Å–ø—ñ–π—Å—å–∫–µ –º–æ—Ä–µ - –Ω–∞–π–±—ñ–ª—å—à–∏–π –Ω–∞ –ó–µ–º–ª—ñ –∑–∞–º–∫–Ω—É—Ç–µ –≤–æ–¥–æ–π–º–∏—â–µ, —Ç–æ–±—Ç–æ –æ–∑–µ—Ä–æ."
    print_response(largest_lake_answer)
    chat_storage(input_text, largest_lake_answer)
    topics_reply()
    return


def cos():
    cos_response = f"""–í–∏ –æ–±—Ä–∞–ª–∏ –æ–ø–µ—Ä–∞—Ü—ñ—é ¬´{get_current_topic().capitalize()} - 
–ö–æ—Å–∏–Ω—É—Å¬ª. –í–≤–µ–¥—ñ—Ç—å –∫—É—Ç —É –≥—Ä–∞–¥—É—Å–∞—Ö: """
    print_response(cos_response)
    chat_storage(input_text, cos_response)
    angle_deg = get_float_input()
    angle_rad = math.radians(angle_deg)
    cos_value = math.cos(angle_rad)
    cos_answer = f"–ö–æ—Å–∏–Ω—É—Å –∫—É—Ç–∞ {angle_deg} –≥—Ä–∞–¥—É—Å—ñ–≤ –¥–æ—Ä—ñ–≤–Ω—é—î {cos_value:.2f}"
    print_response(cos_answer)
    trig_response = f"""–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É: "{get_current_topic()}". –Ø –º–æ–∂—É –æ–±—á–∏—Å–ª–∏—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö 
—Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π: {", ".join(topics_dictionary["–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞"]["—Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä—ñ—è"].keys())}."""
    print_response(trig_response)
    chat_storage(angle_deg, f"""{cos_answer} 
 {trig_response}""")
    return


def sin():
    sin_response = f"""–í–∏ –æ–±—Ä–∞–ª–∏ –æ–ø–µ—Ä–∞—Ü—ñ—é ¬´{get_current_topic().capitalize()} - 
–°–∏–Ω—É—Å¬ª. –í–≤–µ–¥—ñ—Ç—å –∫—É—Ç —É –≥—Ä–∞–¥—É—Å–∞—Ö: """
    print_response(sin_response)
    chat_storage(input_text, sin_response)
    angle_deg = get_float_input()
    angle_rad = math.radians(angle_deg)
    sin_value = math.sin(angle_rad)
    sin_answer = f"–°–∏–Ω—É—Å –∫—É—Ç–∞ {angle_deg} –≥—Ä–∞–¥—É—Å—ñ–≤ –¥–æ—Ä—ñ–≤–Ω—é—î {sin_value:.2f}."
    print_response(sin_answer)
    trig_response = f"""–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É: "{get_current_topic()}". –Ø –º–æ–∂—É –æ–±—á–∏—Å–ª–∏—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö 
—Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π: {", ".join(topics_dictionary["–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞"]["—Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä—ñ—è"].keys())}."""
    print_response(trig_response)
    chat_storage(angle_deg, f"""{sin_answer} 
 {trig_response}""")
    return


def gcd():
    gcd_response = f"–í–∏ –æ–±—Ä–∞–ª–∏ –æ–ø–µ—Ä–∞—Ü—ñ—é ¬´–ù–°–î¬ª. –í–≤–µ–¥—ñ—Ç—å –ø–µ—Ä—à–µ —á–∏—Å–ª–æ: "
    print_response(gcd_response)
    chat_storage(input_text, gcd_response)
    num1 = get_float_input()
    gcd_answ_1 = "–í–≤–µ–¥—ñ—Ç—å –¥—Ä—É–≥–µ —á–∏—Å–ª–æ: "
    print_response(gcd_answ_1)
    chat_storage(num1, gcd_answ_1)
    num2 = get_float_input()
    while num2:
        num1, num2 = num2, num1 % num2
    gcd_answer = f"–ù–∞–π–±—ñ–ª—å—à–∏–π —Å–ø—ñ–ª—å–Ω–∏–π –¥—ñ–ª—å–Ω–∏–∫ —á–∏—Å–µ–ª –¥–æ—Ä—ñ–≤–Ω—é—î {num1}."
    print_response(gcd_answer)
    chat_storage(num2, gcd_answer)
    topics_reply()
    return


def lcm():
    lcm_response = f"–í–∏ –æ–±—Ä–∞–ª–∏ –æ–ø–µ—Ä–∞—Ü—ñ—é ¬´–ù–°–ö¬ª. –í–≤–µ–¥—ñ—Ç—å –ø–µ—Ä—à–µ —á–∏—Å–ª–æ: "
    print_response(lcm_response)
    chat_storage(input_text, lcm_response)
    a = get_float_input()
    lcm_answ_1 = "–í–≤–µ–¥—ñ—Ç—å –¥—Ä—É–≥–µ —á–∏—Å–ª–æ: "
    print_response(lcm_answ_1)
    chat_storage(a, lcm_answ_1)
    b = get_float_input()

    def gcd_lcm(a, b):
        if b == 0:
            return a
        return gcd_lcm(b, a % b)

    answer = abs(a * b) // gcd_lcm(a, b)
    lcm_answer = f"–ù–∞–π–º–µ–Ω—à–µ —Å–ø—ñ–ª—å–Ω–µ –∫—Ä–∞—Ç–Ω–µ —á–∏—Å–µ–ª {a} —Ç–∞ {b} –¥–æ—Ä—ñ–≤–Ω—é—î {answer}."
    print_response(lcm_answer)
    chat_storage(b, lcm_answer)
    topics_reply()
    return


def vector():
    vector_response = f"""–í–∏ –æ–±—Ä–∞–ª–∏ –æ–ø–µ—Ä–∞—Ü—ñ—é ¬´{get_current_topic().capitalize()}¬ª. –í–≤–µ–¥—ñ—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ 
–ø–µ—Ä—à–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞ (—á–µ—Ä–µ–∑ –∫–æ–º—É –∑ –ø—Ä–æ–±—ñ–ª–æ–º): """
    print_response(vector_response)
    chat_storage(input_text, vector_response)
    a = calculation_vector()
    vector_answ_1 = "–í–≤–µ–¥—ñ—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –¥—Ä—É–≥–æ–≥–æ –≤–µ–∫—Ç–æ—Ä–∞ (—á–µ—Ä–µ–∑ –∫–æ–º—É –∑ –ø—Ä–æ–±—ñ–ª–æ–º):"
    print_response(vector_answ_1)
    chat_storage(a, vector_answ_1)
    b = calculation_vector()
    x = a[1] * b[2] - a[2] * b[1]
    y = a[2] * b[0] - a[0] * b[2]
    z = a[0] * b[1] - a[1] * b[0]
    result = [x, y, z]
    if result == [0, 0, 0]:
        zero_vector = "–í–µ–∫—Ç–æ—Ä–Ω–∏–π –¥–æ–±—É—Ç–æ–∫ —î –Ω—É–ª—å–æ–≤–∏–º –≤–µ–∫—Ç–æ—Ä–æ–º."
        print_response(zero_vector)
        chat_storage(b, zero_vector)
        topics_reply()
        return
    vector_answer = f"–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–±—É—Ç–∫—É: ({result[0]}, {result[1]}, {result[2]})"
    print_response(vector_answer)
    chat_storage(b, vector_answer)
    topics_reply()
    return


def calculation_vector():
    while True:
        vector_str = get_user_input()
        if check_input(vector_str):
            vect = vector_str.split(", ")
            if len(vect) != 3:
                calc_vector_response = "–ù–µ–≤—ñ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ñ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –≤–µ–∫—Ç–æ—Ä–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑: "
                print_response(calc_vector_response)
                chat_storage("–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω—ñ –¥–∞–Ω—ñ", calc_vector_response)
            try:
                vect = [float(x) for x in vect]
            except ValueError:
                calc_vector_response = "–ù–µ–≤—ñ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ñ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –≤–µ–∫—Ç–æ—Ä–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑: "
                print_response(calc_vector_response)
                chat_storage("–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω—ñ –¥–∞–Ω—ñ", calc_vector_response)
            return vect


def triangle_area():
    triangle_response = f"""–í–∏ –æ–±—Ä–∞–ª–∏ –æ–ø–µ—Ä–∞—Ü—ñ—é ¬´{get_current_topic().capitalize()} - {input_text.capitalize()}¬ª. –ê–ª–µ 
–∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –≤–µ–∫—Ç–æ—Ä–Ω–æ–≥–æ –¥–æ–±—É—Ç–∫—É. –û—Ç–æ–∂, –≤–≤–µ–¥—ñ—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –≤–µ–∫—Ç–æ—Ä–∞ a (—á–µ—Ä–µ–∑ –∫–æ–º—É –∑ –ø—Ä–æ–±—ñ–ª–æ–º): """
    print_response(triangle_response)
    chat_storage(input_text, triangle_response)
    a = calculation_vector()
    triangle_answ_1 = "–¢–µ–ø–µ—Ä –Ω–∞–ø–∏—à—ñ—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –≤–µ–∫—Ç–æ—Ä–∞ h (—á–µ—Ä–µ–∑ –∫–æ–º—É –∑ –ø—Ä–æ–±—ñ–ª–æ–º): "
    print_response(triangle_answ_1)
    chat_storage(a, triangle_answ_1)
    h = calculation_vector()
    cross_product = [a[1] * h[2] - a[2] * h[1],
                     a[2] * h[0] - a[0] * h[2],
                     a[0] * h[1] - a[1] * h[0]]
    s = 0.5 * abs(sum(cross_product))
    triangle_answer = f"–û—Ç–∂–µ, –ø–ª–æ—â–∞ —Ç—Ä–∏–∫—É—Ç–Ω–∏–∫–∞ = {s}."
    print_response(triangle_answer)
    math_response = f"""–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É: "{get_current_topic()}". –Ø –º–æ–∂—É –æ–±—á–∏—Å–ª–∏—Ç–∏ 
–ø–ª–æ—â—É –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –æ–±‚Äô—î–∫—Ç—ñ–≤: {", ".join(topics_dictionary["–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞"]["–æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ"].keys())}."""
    print_response(math_response)
    chat_storage(h, f"""{triangle_answer}
 {math_response}""")
    return


def trapezium_area():
    trapezium_response = f"""–í–∏ –æ–±—Ä–∞–ª–∏ –æ–ø–µ—Ä–∞—Ü—ñ—é ¬´{get_current_topic().capitalize()} - 
{input_text.capitalize()}¬ª. –í–≤–µ–¥—ñ—Ç—å a: """
    print_response(trapezium_response)
    chat_storage(input_text, trapezium_response)
    a = get_float_input()
    trapezium_answ_1 = "–¢–µ–ø–µ—Ä –Ω–∞–ø–∏—à—ñ—Ç—å b: "
    print_response(trapezium_answ_1)
    chat_storage(a, trapezium_answ_1)
    b = get_float_input()
    trapezium_answ_2 = "–í–≤–µ–¥—ñ—Ç—å –≤–∏—Å–æ—Ç—É h: "
    print_response(trapezium_answ_2)
    chat_storage(b, trapezium_answ_2)
    h = get_float_input()
    s = 0.5 * (a + b) * h
    trapezium_answer = f"–û—Ç–∂–µ, –ø–ª–æ—â–∞ —Ç—Ä–∞–ø–µ—Ü—ñ—ó = {s}."
    print_response(trapezium_answer)
    math_response = f"""–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É: "{get_current_topic()}". –Ø –º–æ–∂—É –æ–±—á–∏—Å–ª–∏—Ç–∏ 
–ø–ª–æ—â—É –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –æ–±‚Äô—î–∫—Ç—ñ–≤: {", ".join(topics_dictionary["–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞"]["–æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ"].keys())}."""
    print_response(math_response)
    chat_storage(b, f"""{trapezium_answer}
 {math_response}""")
    return


def rectangle_area():
    rectangle_response = f"""–í–∏ –æ–±—Ä–∞–ª–∏ –æ–ø–µ—Ä–∞—Ü—ñ—é ¬´{get_current_topic().capitalize()} - 
{input_text.capitalize()}¬ª. –í–≤–µ–¥—ñ—Ç—å —Å—Ç–æ—Ä–æ–Ω—É a: """
    print_response(rectangle_response)
    chat_storage(input_text, rectangle_response)
    a = get_float_input()
    rectangle_answ_1 = "–¢–µ–ø–µ—Ä –Ω–∞–ø–∏—à—ñ—Ç—å —Å—Ç–æ—Ä–æ–Ω—É b: "
    print_response(rectangle_answ_1)
    chat_storage(a, rectangle_answ_1)
    b = get_float_input()
    s = a * b
    rectangle_answer = f"–û—Ç–∂–µ, –ø–ª–æ—â–∞ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ = {s}."
    print_response(rectangle_answer)
    math_response = f"""–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É: "{get_current_topic()}". –Ø –º–æ–∂—É –æ–±—á–∏—Å–ª–∏—Ç–∏ 
–ø–ª–æ—â—É –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –æ–±‚Äô—î–∫—Ç—ñ–≤: {", ".join(topics_dictionary["–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞"]["–æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ"].keys())}."""
    print_response(math_response)
    chat_storage(b, f"""{rectangle_answer}
 {math_response}""")
    return


def grav_constant():
    g = 6.6743 * 10 ** (-11)
    response_grav = "–ì—Ä–∞–≤—ñ—Ç–∞—Ü—ñ–π–Ω–∞ —Å—Ç–∞–ª–∞ G = {:.10} –º^3 / (–∫–≥ * —Å^2).".format(g)
    print_response(response_grav)
    chat_storage(input_text, response_grav)
    topics_reply()
    return


def ampere_form():
    ampere_response = """–í–∏ –æ–±—Ä–∞–ª–∏ –æ–ø–µ—Ä–∞—Ü—ñ—é ¬´{get_current_topic()}¬ª. 
–í–≤–µ–¥—ñ—Ç—å —Å–∏–ª—É —Å—Ç—Ä—É–º—É I: """
    print_response(ampere_response)
    chat_storage(input_text, ampere_response)
    i = get_float_input()
    ampere_answ_1 = "–¢–µ–ø–µ—Ä –Ω–∞–ø–∏—à—ñ—Ç—å –≤—ñ–¥—Å—Ç–∞–Ω—å –¥–æ –ø—Ä–æ–≤—ñ–¥–Ω–∏–∫–∞ r: "
    print_response(ampere_answ_1)
    chat_storage(i, ampere_answ_1)
    r = get_float_input()
    mu0 = 4 * math.pi * 10 ** (-7)
    b = (mu0 * i) / (2 * math.pi * r)
    ampere_answer = "–Ü–Ω–¥—É–∫—Ü—ñ—è –º–∞–≥–Ω—ñ—Ç–Ω–æ–≥–æ –ø–æ–ª—è B = {:.10f} –¢–ª.".format(b)
    print_response(ampere_answer)
    chat_storage(r, ampere_answer)
    topics_reply()
    return


def topics_reply():
    global topic_history
    topic_history.pop()
    response_topics_reply = f"""–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É: "{get_current_topic()}". –í–∏ –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç–∏ –º–µ–Ω—ñ 
–ø–∏—Ç–∞–Ω–Ω—è –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö —Ç–µ–º: {", ".join(topics_dictionary[get_current_topic().lower()].keys())}."""
    print_response(response_topics_reply)
    topic_history.append(get_current_topic())
    chat_storage("", response_topics_reply)


def get_float_input():
    while True:
        try:
            value = get_user_input()
            check_result = check_input(value)
            if check_result:
                value = float(value)
                if value <= 0:
                    response_message = "–ó–Ω–∞—á–µ–Ω–Ω—è –º–∞—î –±—É—Ç–∏ –¥—ñ–π—Å–Ω–∏–º —á–∏—Å–ª–æ–º, —â–æ –±—ñ–ª—å—à–µ –Ω—É–ª—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑: "
                    print_response(response_message)
                    chat_storage("–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω—ñ –¥–∞–Ω—ñ", response_message)
                else:
                    return value
        except ValueError:
            response_message = "–ó–Ω–∞—á–µ–Ω–Ω—è –º–∞—î –±—É—Ç–∏ –¥—ñ–π—Å–Ω–∏–º —á–∏—Å–ª–æ–º, —â–æ –±—ñ–ª—å—à–µ –Ω—É–ª—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑: "
            print_response(response_message)
            chat_storage("–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω—ñ –¥–∞–Ω—ñ", response_message)


def check_input(input_text):
    if input_text.lower() == "–≤–∏—Ö—ñ–¥":
        print_response("–†–∞–¥–∏–π –±—É–≤ –ø–æ—Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—è, –¥–æ –∑—É—Å—Ç—Ä—ñ—á—ñ.")
        chat_storage("–≤–∏—Ö—ñ–¥", "–†–∞–¥–∏–π –±—É–≤ –ø–æ—Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—è, –¥–æ –∑—É—Å—Ç—Ä—ñ—á—ñ.")
        exit()
    elif input_text.lower() == "–¥–æ–ø–æ–º–æ–≥–∞":
        help_message = f"""–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É ¬´{get_current_topic()}¬ª.
–î–ª—è –≤–∏—Ö–æ–¥—É, –Ω–∞–ø–∏—à—ñ—Ç—å ¬´–≤–∏—Ö—ñ–¥¬ª."""
        print_response(help_message)
        chat_storage("–¥–æ–ø–æ–º–æ–≥–∞", help_message)
    else:
        return True


def print_greeting():
    global topics_dictionary
    greeting = f"""–í—ñ—Ç–∞—é, –º–µ–Ω–µ –∑–≤–∞—Ç–∏ –¶–µ–∑–∞—Ä. –í–∏ –º–æ–∂–µ—Ç–µ
–∑–∞–¥–∞—Ç–∏ –º–µ–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö —Ç–µ–º: {', '.join(topics_dictionary.keys())}."""
    print_response(greeting)
    chat_storage("–Ω–∞–∑–∞–¥", greeting)


def print_response(text):
    print(f"\033[34m[–¶–µ–∑–∞—Ä]: \033[0m{text}")


def get_user_input():
    return input("\033[33m[–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á]: \033[0m")


def get_previous_topic():
    global topic_history
    if len(topic_history) < 2:
        return None
    return topic_history[-2]


def get_current_topic():
    global topic_history
    if len(topic_history) == 0:
        return None
    return topic_history[-1]


def print_help():
    help_message = ""
    if len(topic_history) == 0:
        help_message += "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –æ–ø–µ—Ä–∞—Ü—ñ—ó: "
    else:
        help_message += f"""–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É ¬´{get_current_topic()}¬ª."""

    help_message += f"""\n–î–ª—è –≤–∏—Ö–æ–¥—É, –Ω–∞–ø–∏—à—ñ—Ç—å ¬´–≤–∏—Ö—ñ–¥¬ª.\n–î–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Ç–µ–º–∏ –Ω–∞–ø–∏—à—ñ—Ç—å ¬´–Ω–∞–∑–∞–¥¬ª."""
    print_response(help_message)
    chat_storage("–¥–æ–ø–æ–º–æ–≥–∞", help_message)


def topic_selection(topic):
    global topic_history, topics_dictionary
    topic = topic.lower()
    if topic in topics_dictionary:
        topic_history.append(topic)
        topic_response = f"""{random.choice(comments)}–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É: "{get_current_topic()}". –í–∏ –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç–∏ –º–µ–Ω—ñ 
–ø–∏—Ç–∞–Ω–Ω—è –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö —Ç–µ–º: {", ".join(topics_dictionary[get_current_topic()].keys())}."""
        print_response(topic_response)
        chat_storage(topic, topic_response)
        return
    elif get_current_topic() in topics_dictionary.keys() and \
            topic in topics_dictionary[get_current_topic()].keys():
        topic_history.append(topic)
        if topic == "–∫–æ–ª—è–¥–∫–∏":
            response_carols = f"""{random.choice(comments)}–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É: "{get_current_topic()}". –Ø –º–æ–∂—É –∑–∞—Å–ø—ñ–≤–∞—Ç–∏ 5 —Ä—ñ–∑–Ω–∏—Ö –∫–æ–ª—è–¥–æ–∫. –û–±–∏—Ä–∞–π—Ç–µ, —è–∫–∞ 
–í–∞–º –¥–æ –¥—É—à—ñ: ¬´{"¬ª, ¬´".join(topics_dictionary[get_previous_topic()][get_current_topic()].keys())}¬ª."""
            print_response(response_carols)
            chat_storage(topic, response_carols)
        elif topic == "—Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä—ñ—è":
            response_trig = f"""{random.choice(comments)}–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É: "{get_current_topic()}". –Ø –º–æ–∂—É –æ–±—á–∏—Å–ª–∏—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö 
—Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π: {", ".join(topics_dictionary[get_previous_topic()][get_current_topic()].keys())}."""
            print_response(response_trig)
            chat_storage(topic, response_trig)
        elif topic == "–æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ":
            response_square = f"""{random.choice(comments)}–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É: "{get_current_topic()}". –Ø –º–æ–∂—É –æ–±—á–∏—Å–ª–∏—Ç–∏ 
–ø–ª–æ—â—É –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –æ–±‚Äô—î–∫—Ç—ñ–≤: {", ".join(topics_dictionary[get_previous_topic()][get_current_topic()].keys())}."""
            print_response(response_square)
            chat_storage(topic, response_square)
        else:
            topics_dictionary[get_previous_topic()][get_current_topic()]()
        return
    elif get_current_topic() in topics_dictionary["–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞"].keys() and \
            input_text in topics_dictionary[get_previous_topic()][get_current_topic()].keys():
        topics_dictionary[get_previous_topic()][get_current_topic()][input_text]()
    elif get_current_topic() in topics_dictionary["–∑–∞–≥–∞–ª—å–Ω—ñ"].keys() and \
            input_text in topics_dictionary[get_previous_topic()][get_current_topic()].keys():
        topics_dictionary[get_previous_topic()][get_current_topic()][input_text]()
    else:
        available_subtopics = None
        if get_current_topic() in topics_dictionary.keys():
            available_subtopics = ", ".join(topics_dictionary[get_current_topic().lower()].keys())
        if available_subtopics:
            response = f"""–Ø –Ω–µ –∑–Ω–∞—é —Ü—ñ—î—ó —Ç–µ–º–∏, –Ω–∞—Ç–æ–º—ñ—Å—Ç—å, –≤–∏ –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç–∏ –º–µ–Ω—ñ 
–ø–∏—Ç–∞–Ω–Ω—è –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö —Ç–µ–º: {available_subtopics},
{", ".join(topics_dictionary.keys())}."""
            print_response(response)
            chat_storage(input_text, response)
        else:
            response = f"""–Ø –Ω–µ –∑–Ω–∞—é —Ü—ñ—î—ó —Ç–µ–º–∏, –Ω–∞—Ç–æ–º—ñ—Å—Ç—å, –≤–∏ –º–æ–∂–µ—Ç–µ 
–∑–∞–¥–∞—Ç–∏ –º–µ–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö —Ç–µ–º: {", ".join(topics_dictionary.keys())}."""
            print_response(response)
            chat_storage(input_text, response)


def chat_storage(request, response):
    with open('chat_dialog.txt', 'a', encoding='utf-8') as file:
        file.write(f'[–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á]: {request}\n')
        file.write(f'[–¶–µ–∑–∞—Ä]: {response}\n')


topics_dictionary = {
    "—Ñ—ñ–∑–∏–∫–∞": {
        "—Ñ–æ—Ä–º—É–ª–∞ –∞–º–ø–µ—Ä–∞": ampere_form,
        "–≥—Ä–∞–≤—ñ—Ç–∞—Ü—ñ–π–Ω–∞ —Å—Ç–∞–ª–∞": grav_constant
    },
    "–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞": {
        "–æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ": {
            "–ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫": rectangle_area,
            "—Ç—Ä–∞–ø–µ—Ü—ñ—è": trapezium_area,
            "—Ç—Ä–∏–∫—É—Ç–Ω–∏–∫": triangle_area
        },
        "–Ω–∞–π–±—ñ–ª—å—à–∏–π —Å–ø—ñ–ª—å–Ω–∏–π –¥—ñ–ª—å–Ω–∏–∫": gcd,
        "–Ω–∞–π–º–µ–Ω—à–µ —Å–ø—ñ–ª—å–Ω–µ –∫—Ä–∞—Ç–Ω–µ": lcm,
        "–≤–µ–∫—Ç–æ—Ä–Ω–∏–π –¥–æ–±—É—Ç–æ–∫": vector,
        "—Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä—ñ—è": {
            "—Å–∏–Ω—É—Å": sin,
            "–∫–æ—Å–∏–Ω—É—Å": cos
        }
    },
    "–≥–µ–æ–≥—Ä–∞—Ñ—ñ—è": {
        "–Ω–∞–π–±—ñ–ª—å—à–µ –æ–∑–µ—Ä–æ": largest_lake,
        "–∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç –Ω–∞–π–±—ñ–ª—å—à–æ—ó –ø—É—Å—Ç–µ–ª—ñ": sahara,
        "–¥–µ—Ä–∂–∞–≤–∞ –∑ –Ω–∞–π–±—ñ–ª—å—à–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—é –æ–∑–µ—Ä": lakes,
        "–¥–≤—ñ –¥–µ—Ä–∂–∞–≤–∏ –∑ –Ω–∞–π–±—ñ–ª—å—à–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—é –≤–æ–¥–æ—Å—Ö–æ–≤–∏—â": reservoirs,
        "–Ω–∞–π–±—ñ–ª—å—à–∏–π –º–∞—Ç–µ—Ä–∏–∫": largest_continent
    },
    "—Ñ—ñ–ª–æ–ª–æ–≥—ñ—è": {
        "–≤—ñ–¥–º—ñ–Ω–∫–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –º–æ–≤–∏": ukrainian_declension,
        "—Ä–æ–¥–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö —ñ–º–µ–Ω–Ω–∏–∫—ñ–≤": noun_genders
    },
    "–∞—Å—Ç—Ä–æ–Ω–æ–º—ñ—è": {
        "–∫–æ—Å–º—ñ—á–Ω–µ –≤–∏–ø—Ä–æ–º—ñ–Ω—é–≤–∞–Ω–Ω—è": cosmic_radiation,
        "–ø–ª–∞–Ω–µ—Ç–∏ –Ω–∞—à–æ—ó —Å–∏—Å—Ç–µ–º–∏ –∑ –Ω–∞–π–±—ñ–ª—å—à–∏–º–∏ —Ç–∞ –Ω–∞–π–º–µ–Ω—à–∏–º–∏ –æ—Ä–±—ñ—Ç–∞–º–∏": planets_orbit,
        "–≤–ø–ª–∏–≤ –∑–æ—Ä—è–Ω–æ–≥–æ —Å–≤—ñ—Ç–ª–∞ –Ω–∞ –∑–¥–æ—Ä–æ–≤'—è –ª—é–¥–∏–Ω–∏": influence_health,
        "–≤—ñ–¥—Å—Ç–∞–Ω—å –º—ñ–∂ –∑–µ–º–ª–µ—é —Ç–∞ —Å–æ–Ω—Ü–µ–º": planets_distance
    },
    "–∑–∞–≥–∞–ª—å–Ω—ñ": {
        "—á–∞—Å": time,
        "–Ω–æ–≤–∏–π —Ä—ñ–∫": new_year,
        "–º—ñ—Å—è—Ü—å": month,
        "–≤–∞—à–µ —ñ–º'—è": your_name,
        "–∫–æ–ª—è–¥–∫–∏": {
            "–ü—ñ–¥ –Ω–æ–≥–∞–º–∏ —Å–Ω—ñ–≥ —Ä–∏–ø—É—á–∏–π": carol_1,
            "–í—ñ—î –≤—ñ—Ç–µ—Ä –∑ –≥—ñ—Ä": carol_2,
            "–û–π –Ω–∞ —Ä—ñ—á—Ü—ñ, –Ω–∞ –ô–æ—Ä–¥–∞–Ω—ñ": carol_3,
            "–ö–æ–ª—è–¥—É—î–º, –∫–æ–ª—è–¥—É—î–º": carol_4,
            "–í–∏—Ñ–ª–µ—î–º—Å—å–∫–∞ –∑—ñ—Ä–∫–∞ —Å—è—î": carol_5
        },
        "–Ω–∞–¥–∏—Ö–∞—é—á—ñ —Ü–∏—Ç–∞—Ç–∏": quotation
    }
}

print_greeting()

while True:
    try:
        input_text = get_user_input()
    except KeyboardInterrupt:
        break

    if input_text.lower() == "–≤–∏—Ö—ñ–¥":
        break

    if input_text.lower() == '–¥–æ–ø–æ–º–æ–≥–∞':
        print_help()
        continue

    if input_text.lower() == "–Ω–∞–∑–∞–¥":
        if len(topic_history) > 0:
            topic_history.pop()
            if len(topic_history) > 0:
                response_message = f"""–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–µ–º—É: "{get_current_topic()}". –í–∏ –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç–∏ –º–µ–Ω—ñ 
–ø–∏—Ç–∞–Ω–Ω—è –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö —Ç–µ–º: {", ".join(topics_dictionary[get_current_topic().lower()].keys())}."""
                print_response(response_message)
                chat_storage("–Ω–∞–∑–∞–¥", response_message)
            else:
                print_greeting()
        else:
            print_greeting()
    else:
        topic_selection(input_text)

print_response("–†–∞–¥–∏–π –±—É–≤ –ø–æ—Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—è, –¥–æ –∑—É—Å—Ç—Ä—ñ—á—ñ.")
chat_storage("–≤–∏—Ö—ñ–¥", "–†–∞–¥–∏–π –±—É–≤ –ø–æ—Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—è, –¥–æ –∑—É—Å—Ç—Ä—ñ—á—ñ.")
